public class Solution {

    public long[] prefix(int[] data){
        int size = data.length ;
        long[] prefixSum = new long[size] ;
        prefixSum[0] = (long) data[0] ;
        for(int i = 1 ; i < size ; i ++ ){
            prefixSum[i] = prefixSum[i-1] + (long) data[i] ;
        }
        return prefixSum ;
    }

    public long rangeSum(long[] prefixSum, int start, int end ){
        if(start == 0){
            return prefixSum[end] ;
        }
        else{
            return prefixSum[end] - prefixSum[start-1] ;
        }
    }

    public int zeroIndexing(int data){
        return data-1 ;
    }

    public long[] rangeSum(int[] A, int[][] B) {
        int queries = B.length ;
        long[] output = new long[queries] ;
        int size = A.length ;
        long[] prefixData = prefix(A) ;
        for(int i = 0 ; i < queries ; i ++ ){
            int start = zeroIndexing(B[i][0]) ;
            int end = zeroIndexing(B[i][1]) ;
            output[i] = rangeSum(prefixData, start, end ) ;
        }
        return output ;
    }
}
